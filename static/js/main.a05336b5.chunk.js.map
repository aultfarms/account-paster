{"version":3,"sources":["name-category-mappings.js","App.js","serviceWorker.js","index.js"],"names":["standardizeName","orig","a","replace","toUpperCase","categoryNoteMapping","nameCategoryMapping","obj","mergeifamount","lessthan","value","category","splits","abs","Object","keys","reduce","acc","k","col","val","redIfPopulated","style","minWidth","backgroundColor","txToRow","r","i","iserror","date","isValid","format","check","description","amount","name","note","standardizeTx","tx","line","moment","numeral","catmap","_","cloneDeep","mia","merge","Math","omit","isArray","join","ret","length","insertSplits","push","match","console","log","forEach","s","splitLine","App","useState","parseState","setParseState","transactions","setTransactions","onDrop","useCallback","acceptedFiles","file","csvparse","header","complete","data","errors","withSplits","map","useDropzone","getRootProps","getInputProps","body","border","display","alignItems","justifyContent","height","borderRadius","margin","className","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a05336b5.chunk.js","sourcesContent":["// All names/keys get standardized this way:\nexport const standardizeName = orig => {\n  if (!orig) return '';\n  let a = orig;\n  a = a.replace(/[^a-zA-Z]/g,''); // remove puntuation and spaces\n  a = a.toUpperCase(); // case insensitive\n  a = a.replace(/(LLC|INC)/,''); // no LLC or INC\n  return a;\n};\n\nconst standardizeNameKeys = obj => Object.keys(obj)\n  .reduce((acc,k) => {\n    acc[standardizeName(k)] = obj[k];\n    return acc;\n  }, {});\n\nexport const categoryNoteMapping = {\n  'cattle-purchase-cattle': 'head: , weight: , incomingid: ',\n  'sales-cattle': 'head: , loads: , weight: , outid: ',\n  'sales-grain-corn': 'bushels',\n  'sales-grain-beans': 'bushels',\n  'sales-grain-wheat': 'bushels',\n  'fuel-dieseloffroad': 'gallons',\n  'fuel-dieselonroad': 'gallons',\n  'fuel-gasoline': 'gallons',\n  'crop-seed-corn': 'bags',\n  'crop-seed-beans': 'units',\n  'crop-seed-wheat': 'units',\n  'bedding-straw': 'bales',\n};\n\n\nexport const nameCategoryMapping = standardizeNameKeys({\n  'ADM Logansport': 'sales-grain-corn',\n  'AGRICOR, INC.': 'feed-hominy',\n  'ARCHER DANIELS MIDLAND': 'feed-hulls',\n  'AT&T - AultFarms': 'utilities-cellphones',\n  'AT&T Mobility - DAD': 'utilities-cellphones',\n  'AT&T Mobility': 'utilities-cellphones',\n  'Ag Source, Inc.': 'repairs-grainhandling',\n  'Agco Finance - Agco Plus': 'repairs-telehandler',\n  'AGCO FINANCE LLC': 'repairs-telehandler',\n  'Agronomic Solutions': 'services-regulatory',\n  'ALRO STEEL': 'supplies-steel',\n  'BBH Trucking': 'feed-trucking-brad',\n  'BENJAMIN LIVESTOCK & FEED': 'cattle-purchase-trucking',\n  'BOYER LIVESTOCK TRUCKING LLC': 'cattle-purchase-trucking',\n  'BIG R STORES': 'supplies-general',\n  'STOCK+FIELD-CORPORATE': 'supplies-general',\n  'BLB Trucking': 'repairs-truck-general',\n  'Bambauer Equipment, LLC': [ 'repairs-manure', 'equipment-FILL_IN_WHAT_WE_BOUGHT' ],\n  'Bane Welker Equip - PAY PLYMOUTH EAUL01': 'repairs-tractors',\n  'BANE-WELKER-PLYMOUTH': 'repairs-tractors',\n  'Bane Welker Equip - PAY WINAMAC DAUL01': 'repairs-tractors',\n  'BANE-WELKER-WINAMAC': 'repairs-tractors',\n  'Bob Gottschalk': 'SPLIT',\n  'Bonnie Montgomery': 'cashrent-fall',\n  'BOSWELL LIVESTOCK COMMISSION CO': { \n    mergeifamount: {\n      lessthan: { value: 0, category: 'cattle-purchase-cattle' }, \n      'else':   {           category: 'sales-cattle' },\n    },\n  },\n  'Bush Veterinary Services, P.C.': 'medicine',\n  'Calf Care': 'medicine',\n  'Cargill Incorporated': 'feed-gluten',\n  'C & J SCOTT FARMS INC': 'supplies-twine',\n  'Ceres Solutions': { \n    category: 'SPLIT', \n    splits: [ 'fuel-dieselonroad', 'fuel-dieseloffroad', 'fuel-gasoline' ] \n  },\n  'CFC DISTRIBUTORS, INC': 'repairs-tillage',\n  'Cole Hardwood': 'bedding-sawdust',\n  'Cole Warren Farms': 'feed-syrup',\n  'CONTERRA AG CAPITAL': { \n    category: 'SPLIT', \n    mergeifamount: {\n      lessthan: { abs: true, value: 2000, splits: [ 'loan-principal-conterra.AG1032', 'loan-interest-conterra.AG1032' ] },\n      'else':   {                         splits: [ 'loan-principal-conterra.AG1019', 'loan-interest-conterra.AG1019' ] },\n    }\n  },\n  'Cornerstone Comfort Solutions': 'repairs-hvac',\n  'DRAGO INDIANA': 'repairs-cornhead',\n  'DEFCO': ['repairs-rentalhouses', 'repairs-beef', 'repairs-buildings', 'repairs-electrical', 'repairs-plumbing' ],\n  'DirecTV': 'utilities-tv',\n  'AT&T': 'utilities-tv',\n  'Du-Mar Welding LLC': 'supplies-general',\n  'Enyart\\'s True Value': 'supplies-general',\n  'Fansler Lumber Co. Inc.': 'supplies-general',\n  'Farm Credit Mid America': 'SPLIT',\n  'Farm Credit Srvcs of Mid-America':  'UNKNOWN',\n  'FARM JOURNAL': 'miscellaneous-subscriptions',\n  'First Bank of Berne': 'SPLIT',\n  'Ferguson Farms, Inc.': 'repairs-truck-trailer',\n  'Fulton County Treasurer': 'taxes-property',\n  'GOHN AG LLC': [ 'crop-seed-beans-treatment', 'crop-fungicide', 'crop-fungicide-aerialapplication' ],\n  'GUTWEIN LLP': 'services-legal',\n  'GREEN LAWN FARM': 'cattle-purchase-cattle',\n  'Greenmark Equipment': 'repairs-tractors',\n  'Gutwein Dairy Consulting, Inc.': 'feed-mineral',\n  'H&H Diesel Inc.': 'repairs-truck-general',\n  'HOLLOWAY\\'S ELECTRIC MOTOR SERVICE': 'repairs-general',\n  'Homer Miller': 'bedding-sawdust',\n  'INGREDION': 'feed-gluten',\n  'Indiana Department of Workforce Development': 'taxes-state-unemployment',\n  'Indiana Farm Bureau Insurance': 'miscellaneous-memberships',\n  'Indiana State Chemist': 'miscellaneous-licensefees',\n  'Irving Materials, Inc.': 'bedding-chips',\n  'JOHNNY ON THE SPOT': 'utilities-sanitation',\n  'Jeri Stinson': 'services-cleaning',\n  'Joe Miller': 'supplies-twine',\n  'JOHN DEERE FINANCIAL': 'SPLIT',\n  'Kelsey Equipment': 'repairs-irrigator',\n  'Kline\\'s CPA Group, P.C.': 'services-accounting',\n  'KUERT CONCRETE INC': 'repairs-concrete',\n  'Lawson Products, Inc.': 'supplies-general',\n  'LDC Claypool Holdings LLC': 'feed-hulls',\n  'Liberty Mutual Acct 401580870': 'insurance-auto',\n  'Liberty Mutual Acct 6680': 'insurance-general',\n  'LIBERTY MUTUAL INSURANCE': [ 'insurance-general', 'insurance-auto', 'insurance-workmanscomp' ],\n  'MACY ELEVATOR': [ 'feed-innoculant', 'repairs-waterfountains' ],\n  'MIAMI LOGISTICS': 'supplies-stone',\n  'MOON FENCING': 'repairs-fence',\n  'McGREW\\'S WELL DRILLING INC': 'repairs-well',\n  'NAPA AUTO PARTS': 'supplies-general',\n  'NAPA ROCHESTER': 'supplies-general',\n  'NAU Country Insurance': 'insurance-crop',\n  'NAU COUNTRY INSURANCE CO': 'insurance-crop',\n  'NUTRIEN AG SOLUTIONS INC': 'SPLIT',\n  'NIPSCO': 'utilities-gas',\n  'New Holland Rochester Inc.': 'repairs-tractors',\n  'NFIB': 'charity',\n  'NORTHERN STAR SEED LLC': 'crop-seed-wheat',\n  'ODELL LUMBER & SUPPLY': 'supplies-lumber',\n  'OR Processing': 'feed-candy',\n  'OYLER REPAIR SHOP': 'repairs-general',\n  'Organix Recycling': 'feed-fruit',\n  'POWER BRAKE AND SPRING': 'supplies-general',\n  'POWER BRAKE AND SPRING SERVICE': 'supplies-general',\n  'Pallet Pro LLC': 'bedding-sawdust',\n  'Parker & Sons Eqpt., Inc.': 'repairs-jcb',\n  'Premier Pallet LLC': 'bedding-sawdust',\n  'Protective Insurance Company': 'insurance-workmanscomp',\n  'Prudential': 'insurance-life-carl',\n  'Reliastar Life Insurance Co': 'insurance-life-rita',\n  'Rochester LP Gas': 'utilities-gas',\n  'SMITH FARM STORE': 'supplies-general',\n  'SMITH FARM STORE-RENSSELAER': 'supplies-general',\n  'Safeco Insurance': 'insurance-auto',\n  'Sam\\'s Club': 'miscellaneous-subscriptions',\n  'SAMS CLUB-SYNCHRONY BANK': 'miscellaneous-subscriptions',\n  'Security Life of Denver Insuranc': 'insurance-life-rita',\n  'Service Sanitation': 'utilities-sanitation',\n  'Silver Star Companies, LLC': 'crop-seed-wheat',\n  'SIMPSON STRAW LLC': 'feed-shucklage',\n  'The Andersons': 'SPLIT',\n  'THE ANDERSONS INC-N MANCHESTER': 'SPLIT',\n  'THE TIRE STORE': 'repairs-pickups',\n  'Transfer from Farm Credit': 'transfer-from:FC.RLOC,to:FF.checking',\n  'Tri-State Calf Products': 'cattle-purchase-cattle',\n  'ULERICK HEATING & COOLING': 'repairs-hvac',\n  'VPSI DUBOIS DISTRIBUTORS': 'medicine',\n  'VETERINARY AND POULTRY SUPPLY, I': 'medicine',\n  'Valley Sanitation': 'utilities-trash',\n  'Voya Finanacial': 'insurance-life-rita',\n  'Wiers International Trucks SOUTH BEND': 'repairs-truck-general',\n  'WIERS INTERNATIONAL TRUCKS': 'repairs-truck-general',\n  'Wildman Uniform and Linen': 'employee-clothes',\n});\n\n\n","import React, { useCallback, useState } from 'react';\nimport { nameCategoryMapping, standardizeName, categoryNoteMapping } from './name-category-mappings';\nimport { useDropzone } from 'react-dropzone';\nimport { parse as csvparse } from 'papaparse';\nimport moment from 'moment';\nimport numeral from 'numeral';\nimport './App.css';\nimport _ from 'lodash';\n\nconst col = (val, redIfPopulated) => {\n  const style = { minWidth: val ? '100px' : '10px' };\n  if (redIfPopulated && val) style.backgroundColor = 'red';\n  return <td style={style} >\n    {val ? val : ''}\n  </td>;\n}\n\nconst txToRow = (r,i) => \n  <tr key={'row'+i} style={{backgroundColor: r.iserror ? 'red' : 'white' }}>\n    {col(r.date && r.date.isValid() ? r.date.format('YYYY-MM-DD') : '') /* writtenDate */ }\n    {col() /* postDate */ }\n    {col(r.check ? r.check : '') /* checkNum */ }\n    {col(r.description) /* description */ }\n    {col(r.amount < 0 ? -r.amount : '') /* debit */ }\n    {col(r.amount >= 0 ? r.amount : '') /* credit  */ }\n    {col() /* splitAmount */ }\n    {col() /* balance */ }\n    {col(r.name) /* who */ }\n    {col(r.category ? r.category : '') /* category */ }\n    {col(r.note ? r.note : '', !r.iserror) /* note, only red if not error */ }\n  </tr>\n;\n\nconst standardizeTx = (tx,line) => {\n  line = line + 2; // header row, and 1-index instead of 0-index\n  const date = moment(tx['Payment Date'], 'MM/DD/YYYY');\n  const name = tx['Payee'] ? tx['Payee'] : '';\n  const description = ''; // in the future, can put memo line here\n  const amount = -numeral(tx['Dollar Amount']).value(); // These are all checks, so \"negative\" amounts\n  let catmap = _.cloneDeep(nameCategoryMapping[standardizeName(name)]);\n  if (!catmap) catmap = false; // explicit boolean false if not there\n  let category = '';\n  let splits = [];\n  let iserror = false;\n  let note = '';\n\n\n  if (!date || !date.isValid()) {\n    iserror = true;\n    note += `The date ${tx['Payment Date']} is invalid.  `;\n  }\n  if (!amount) {\n    iserror = true;\n    note += `The amount ${tx['Dollar Amount']} is invalid`;\n  }\n\n  // Handle conditionally merging in stuff from catmap:\n  // // Example to pick splits based on amount:\n  // { \n  //   category: 'SPLIT',\n  //   mergeifamount: {\n  //                 abs means \"absolute value of amount\" to test against value\n  //     lessthan: { abs: true, value: 2000, splits: [ 'split cat 1', 'split cat 2' ] },\n  //     else: { splits: [ 'split cat 3', 'split cat 4' ] }\n  //   }\n  // }\n  // // Example to pick just category based on amount:\n  // { \n  //   mergeifamount: {\n  //     lessthan: { value: 0, category: 'cat 1' }\n  //     else: { category: 'cat 2' }\n  //   }\n  // }\n  if (catmap && catmap.mergeifamount) {\n    const mia = catmap.mergeifamount;\n    // Check if we have some \"mergers\" base on amount\n    let merge = {};\n    if (mia.lessthan) {\n      merge = mia['else'];\n      const testamt = mia.lessthan.abs ? Math.abs(amount) : amount;\n      if (testamt < mia.lessthan.value) {\n        merge = _.omit(mia.lessthan, 'value');\n      }\n    }\n    catmap = { \n      // Keep whatever else is in the catmap, but ditch the mergeifamount now\n      ..._.omit(catmap, 'mergeifamount'), \n      ...merge \n    };\n  }\n\n  // turn any string or array shorthands into object { category: ... }\n  if (catmap && (typeof catmap === 'string' || _.isArray(catmap))) {\n    catmap = { category: catmap };\n  }\n\n  // Now, decode the category: could be a string, an array of strings, or object w/ category key\n  // Did we find a catmap at all?\n  if (catmap === false) {\n    iserror = true;\n    note += `The name ${name} is not found in the known list of category mappings`;\n    category = '';\n\n  // Do we have an category?\n  } else if (!catmap.category || catmap.category === 'UNKNOWN') {\n    iserror = true;\n    note += `The category ${catmap.category} is UNKNOWN or empty, please fill it in when you paste`;\n    category = catmap.category;\n\n  // Do we have an array of possible categories?\n  } else if (_.isArray(catmap.category)) {\n    iserror = true;\n    note += `This payee could be one of several categories: ${catmap.category.join(', ')}`;\n    category = '';\n\n  // Otherwise, just a regular ole' category\n  } else {\n    category = catmap.category;\n  }\n  // Category is figured out\n\n  if (catmap.splits) {\n    if (!category) category = 'SPLIT';\n    splits = catmap.splits;\n  }\n\n  // Finally, do we have a default note for this category, or one specified w/ the catmap?\n  if (category && categoryNoteMapping[category]) {\n    note += categoryNoteMapping[category];\n  }\n  if (catmap && catmap.note) {\n    note += catmap.note;\n  }\n\n  // Construct our return value, only include splits if we have some\n  let ret = {\n    iserror, note, date, amount, name, category, description\n  };\n  if (splits && splits.length > 0) ret = { ...ret, splits };\n\n  return ret;\n}\n\nconst splitLine = (tx,category) => ({\n  iserror: tx.iserror || !category,\n  note: tx.iserror ? 'Split of line w/ error' : (!category ? 'Fill in category' : ''),\n  date: '',\n  amount: '',\n  name: 'SPLIT',\n  category,\n  description: 'SPLIT',\n})\nconst insertSplits = (acc, tx, i) => {\n  acc.push(tx);\n  if (tx.splits || (tx.category && tx.category === 'SPLIT')) {\n    const splits = tx.splits || [ '', '' ]; // default to 2 blank splits\n\nif (tx.name.match(/CONTERRA/)) {\nconsole.log('CONTERRA: insertsplits: splits = ', splits);\n}\n    splits.forEach(s => {\n      acc.push(splitLine(tx, s));\n    });\n  }\n  return acc;\n};\n\nexport const App = () => {\n  \n  const [parseState, setParseState] = useState('START');\n  const [transactions, setTransactions] = useState([]);\n\n  const onDrop = useCallback((acceptedFiles) => {\n    setParseState('PARSING');\n\n    acceptedFiles.forEach((file) => {\n      csvparse(file, {\n        header: true,\n        complete: ({ data,errors }) => {\n          const cleaned = data.map(standardizeTx);\n          const withSplits = cleaned.reduce(insertSplits, []);\n          setTransactions(withSplits);\n          setParseState('PARSED');\n        },\n      });\n    })\n  }, []);\n  const {getRootProps, getInputProps} = useDropzone({onDrop});\n\n\n  let body = '';\n  switch(parseState) {\n\n    case \"PARSING\": body = \n      <div>Parsing...</div>\n    break;\n\n    case \"PARSED\": body = \n      <div>\n        Paste this into google sheets:\n        <table style={ { border: '1px solid grey' } }>\n          <tbody>\n            { transactions.map(txToRow) }\n          </tbody>\n        </table>\n      </div>;\n    break;\n\n    // START:\n    default: body = \n      <div style={{display: 'flex', alignItems: 'center', justifyContent: 'center', height: '80vh', border: '3px dashed grey', borderRadius: '5px', margin: '20px'}} {...getRootProps()}>\n        <input {...getInputProps()} />\n        <p>v2.1: Drop FBB Excel File Here</p>\n      </div>;\n  }\n\n  return <div className=\"App\">\n    {body}\n  </div>;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}